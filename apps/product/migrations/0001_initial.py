# Generated by Django 4.2.1 on 2025-08-12 14:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("store", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="分类ID"
                    ),
                ),
                (
                    "parent_id",
                    models.PositiveIntegerField(
                        default=0, verbose_name="父分类ID，0表示顶级分类"
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="分类名称")),
                ("sort_order", models.IntegerField(default=0, verbose_name="排序顺序")),
                (
                    "icon_url",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="分类图标URL",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否启用"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="是否删除"),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "商品分类",
                "verbose_name_plural": "商品分类",
                "db_table": "category",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="商品ID"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="商品名称")),
                (
                    "subtitle",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="商品副标题"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="商品详情描述"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="售价"
                    ),
                ),
                (
                    "original_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="原价",
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="成本价",
                    ),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(default=0, verbose_name="库存数量"),
                ),
                (
                    "min_stock",
                    models.PositiveIntegerField(default=0, verbose_name="最低库存预警"),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=8,
                        null=True,
                        verbose_name="商品重量（kg）",
                    ),
                ),
                (
                    "thumbnail",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="缩略图URL"
                    ),
                ),
                (
                    "gallery",
                    models.TextField(
                        blank=True, null=True, verbose_name="商品图片集（JSON格式）"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "草稿"),
                            ("on_sale", "在售"),
                            ("off_sale", "下架"),
                            ("out_of_stock", "缺货"),
                        ],
                        default="draft",
                        max_length=12,
                        verbose_name="商品状态",
                    ),
                ),
                (
                    "sales_count",
                    models.PositiveIntegerField(default=0, verbose_name="销售数量"),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="浏览次数"),
                ),
                ("sort_order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "seo_title",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="SEO标题"
                    ),
                ),
                (
                    "seo_keywords",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="SEO关键词"
                    ),
                ),
                (
                    "seo_description",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="SEO描述"
                    ),
                ),
                (
                    "is_hot",
                    models.BooleanField(default=False, verbose_name="是否热门商品"),
                ),
                ("is_new", models.BooleanField(default=False, verbose_name="是否新品")),
                (
                    "is_recommend",
                    models.BooleanField(default=False, verbose_name="是否推荐商品"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="是否删除"),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        db_column="category_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="product.category",
                        verbose_name="分类ID",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        db_column="store_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="store.store",
                        verbose_name="店铺ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "商品信息",
                "verbose_name_plural": "商品信息",
                "db_table": "product",
            },
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.CheckConstraint(
                check=models.Q(("price__gte", 0)), name="chk_price"
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.CheckConstraint(
                check=models.Q(("stock__gte", 0)), name="chk_stock"
            ),
        ),
    ]
